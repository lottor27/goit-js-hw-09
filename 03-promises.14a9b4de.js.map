{"mappings":"oeAAAA,EAAA,SAEaC,SAASC,cAAc,SAApC,MACMC,EAAYF,SAASC,cAAc,yBACnCE,EAAaH,SAASC,cAAc,kBACpCG,EAAYJ,SAASC,cAAc,iBACnCI,EAAcL,SAASC,cAAc,mBA+B3C,SAASK,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,GACFI,EAAQ,QAEVC,EAAO,MAAM,GACZ,GAAGN,IAAQ,IAEbQ,MAAK,EAACC,SAAEA,EAAQC,MAAEA,MACjBC,QAAQC,IAAI,uBAAqBH,QAAiBC,MAAU,IAE7DG,OAAM,EAACJ,SAAEA,EAAQC,MAAEA,MAClBC,QAAQC,IAAI,sBAAoBH,QAAeC,MAAU,G,CA1C/DhB,EAAUoB,iBAAiB,SAI3B,SAAkBC,GAChBA,EAAMC,iBAEN,MAAMC,EAAatB,EAAWuB,MACxBR,EAAQd,EAAUsB,MAClBT,EAAWZ,EAAYqB,MAE7BP,QAAQC,IAAIK,GACZN,QAAQC,IAAIF,GACZC,QAAQC,IAAIH,GAUIF,YAPD,KACb,IAAK,IAAIY,EAAI,EAAGA,EAAIV,EAAUU,IAC5BR,QAAQC,IAAIO,GACZrB,EAAcW,EAAUC,GAE1BC,QAAQC,IAAI,eAA0B,GAEL,GAAGK,I","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst bntSubmit = document.querySelector('button[type=\"submit\"]');\nconst delayInput = document.querySelector('[name=\"delay\"]');\nconst stepInput = document.querySelector('[name=\"step\"]');\nconst amountInput = document.querySelector('[name=\"amount\"]');\n\n\nbntSubmit.addEventListener(\"click\", onSubmit);\n\n  \n\nfunction onSubmit(event) {\n  event.preventDefault();\n\n  const firstDelay = delayInput.value;\n  const delay = stepInput.value;\n  const position = amountInput.value;\n  \n  console.log(firstDelay);\n  console.log(delay);\n  console.log(position);\n  \n\n  const conter = () => {\n    for (let i = 0; i < position; i++) {\n      console.log(i);\n      createPromise(position, delay);\n    }\n    console.log('Конец работы');\n  }\n  const timerId = setTimeout(conter, `${firstDelay}`);\n\n}\n    \n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve('Good');\n      }\n      reject('Bad');\n    }, `${delay}`);\n  })\n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n};\n\n\n// createPromise(2, 1500)\n  \n\n"],"names":["parcelRequire","document","querySelector","$47d4ff9957288465$var$bntSubmit","$47d4ff9957288465$var$delayInput","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","then","position","delay","console","log","catch","addEventListener","event","preventDefault","firstDelay","value","i"],"version":3,"file":"03-promises.14a9b4de.js.map"}