{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEaC,SAASC,cAAc,SAApC,MACMC,EAAYF,SAASC,cAAc,yBACnCE,EAAaH,SAASC,cAAc,kBACpCG,EAAYJ,SAASC,cAAc,iBACnCI,EAAcL,SAASC,cAAc,mBAmC3C,SAASK,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,GACFI,EAAQ,QAEVC,EAAO,MAAM,GACZ,GAAGN,IAAQ,IAEbQ,MAAK,EAACC,SAAEA,EAAQC,MAAEA,MACjBC,EAAArB,GAASsB,OAAOC,QAAQ,uBAAqBJ,QAAiBC,MAAU,IAEzEI,OAAM,EAACL,SAAEA,EAAQC,MAAEA,MAClBC,EAAArB,GAASsB,OAAOG,QAAQ,sBAAoBN,QAAiBC,MAAU,G,CA9C7EhB,EAAUsB,iBAAiB,SAI3B,SAAkBC,GAChBA,EAAMC,iBAEN,MAAMC,EAAaxB,EAAWyB,MACxBC,EAAazB,EAAUwB,MACvBX,EAAWZ,EAAYuB,MAE7BE,QAAQC,IAAIJ,GAEZG,QAAQC,IAAId,GAEZ,IAAIC,EAAQS,EAEV,IAAK,IAAIK,EAAI,EAAGA,GAAKf,EAAUe,GAAK,EAClCjB,YAAW,KACTT,IACAwB,QAAQC,IAAIC,EAAE,GAEb,GAAGd,KACLA,GAAS,GAAGW,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst bntSubmit = document.querySelector('button[type=\"submit\"]');\nconst delayInput = document.querySelector('[name=\"delay\"]');\nconst stepInput = document.querySelector('[name=\"step\"]');\nconst amountInput = document.querySelector('[name=\"amount\"]');\n\n\nbntSubmit.addEventListener(\"click\", onSubmit);\n\n  \n\nfunction onSubmit(event) {\n  event.preventDefault();\n\n  const firstDelay = delayInput.value;\n  const inputDelay = stepInput.value;\n  const position = amountInput.value;\n  \n  console.log(firstDelay);\n  // console.log(delay);\n  console.log(position);\n  \n  let delay = firstDelay;\n\n    for (let i = 0; i <= position; i += 1) {\n      setTimeout(() => {\n        createPromise();\n        console.log(i);\n       \n      }, `${delay}`);\n       delay += `${inputDelay}`;\n      // \n    }\n    // const timerId = setTimeout(conter, `${firstDelay}`);\n\n\n}\n    \n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve('Good');\n      }\n      reject('Bad');\n    }, `${delay}`);\n  })\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n};\n\n\n// createPromise(2, 1500)\n  \n\n//  const conter = () => {\n//     for (let i = 0; i < position; i++) {\n//       console.log(i);\n//       createPromise(position, delay);\n//     }\n//     console.log('Конец работы');\n//   }\n//   const timerId = setTimeout(conter, `${firstDelay}`);\n\n\n"],"names":["$7Y9D8","parcelRequire","document","querySelector","$47d4ff9957288465$var$bntSubmit","$47d4ff9957288465$var$delayInput","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","then","position","delay","$parcel$interopDefault","Notify","success","catch","failure","addEventListener","event","preventDefault","firstDelay","value","inputDelay","console","log","i"],"version":3,"file":"03-promises.d3cd22ee.js.map"}