{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAE9BC,GADYF,SAASC,cAAc,yBACtBD,SAASC,cAAc,mBACpCE,EAAYH,SAASC,cAAc,iBACnCG,EAAcJ,SAASC,cAAc,mBAgC3C,SAASI,EAAcC,EAAQC,GAC7B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,OAAEH,E,MAAQC,IAElBG,EAAO,C,OAAEJ,E,MAAQC,GAAQ,GAE1BA,EAAM,G,CAtCbR,EAAKgB,iBAAiB,UAItB,SAAkBC,GAChBA,EAAMC,iBAEaf,EAAWgB,MAA9B,MACMC,EAAahB,EAAUe,MACvBZ,EAASF,EAAYc,MAE3B,IAAK,IAAIE,EAAI,EAAGA,GAAKd,EAAQc,GAAK,EAAG,CACnC,IAAIC,EAAQC,OAAOF,EAAID,GAAcG,OAAOH,GAE5Bd,EAAcC,EAAQe,GAGnCE,MAAK,EAACjB,OAAEA,EAAMC,MAAEA,MACfiB,EAAA3B,GAAS4B,OAAOC,QAAQ,qBAAqBN,QAAQb,OAAW,IAEjEoB,OAAM,EAACrB,OAAEA,EAAMC,MAAEA,MAChBiB,EAAA3B,GAAS4B,OAAOG,QAAQ,oBAAoBR,QAAQb,OAAW,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst bntSubmit = document.querySelector('button[type=\"submit\"]');\nconst delayInput = document.querySelector('[name=\"delay\"]');\nconst stepInput = document.querySelector('[name=\"step\"]');\nconst amountInput = document.querySelector('[name=\"amount\"]');\n\n\nform.addEventListener('submit', onSubmit);\n\n// bntSubmit.setAttribute('disabled', 'disabled');  \n\nfunction onSubmit(event) {\n  event.preventDefault();\n\n  const firstDelay = delayInput.value;\n  const inputDelay = stepInput.value;\n  const amount = amountInput.value;\nlet delay = firstDelay;\n  for (let i = 1; i <= amount; i += 1) {\n    let delay = Number(i * inputDelay) + Number(inputDelay); \n\n    const promise = createPromise(amount, delay);\n\n    promise\n      .then(({ amount, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${i} in ${delay} ms`);\n      })\n      .catch(({ amount, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${i} in ${delay} ms`);\n      });\n  }\n\n\n\n\n}\nfunction createPromise(amount, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ amount, delay });\n      } else {\n        reject({ amount, delay });\n      }\n    }, delay);\n  });\n}\n\n "],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delayInput","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$createPromise","amount","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","value","inputDelay","i","delay1","Number","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.ce9980c0.js.map"}